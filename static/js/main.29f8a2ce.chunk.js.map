{"version":3,"sources":["components/ResultBar.js","components/KeyRows.js","components/KeyBox.js","components/App.js","reportWebVitals.js","index.js"],"names":["ResultBar","props","state","this","value","eqn","id","Component","KeyRows","values","map","x","i","className","KeyBox","App","evaluate","eqnstr","inpstr","opr","n1","length","inp","d1","Number","isNaN","d2","slice","console","log","inputString","eqnString","handlekey","event","btn","target","textContent","val","setState","prevstate","includes","eqnValue","d","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29f8a2ce.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass ResultBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={}\r\n    }\r\n    \r\n    render() {\r\n        let {value,eqn}=this.props;\r\n        return (\r\n            <div id=\"result\">\r\n                <p>{eqn}</p>\r\n                <p>{value}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultBar\r\n","import React, { Component } from 'react'\r\n\r\nclass KeyRows extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        let values = this.props.values;\r\n        return (\r\n            <>\r\n                <tr>\r\n                    {\r\n                        values.map((x,i) => {\r\n                            return (\r\n                            <td key={i} className={`cells`}>\r\n                                <button>\r\n                                    {x}\r\n                                </button>\r\n                            </td>\r\n                            )\r\n                        })\r\n                    }\r\n                </tr>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default KeyRows\r\n","import React, { Component } from 'react'\r\nimport KeyRows from './KeyRows'\r\nexport class KeyBox extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            values: [['%', 'CE', 'C', 'del'], ['1/x', 'x^2', 'sqrt(x)', '/'], ['7', '8', '9', '*'], ['6', '5', '4', '-'], ['1', '2', '3', '+'], ['+/-', '0', '.', '=']]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let values = this.state.values\r\n        return (\r\n            \r\n                <table>\r\n                    <tbody>\r\n                    {\r\n                        values.map((x,i) => { return <KeyRows key={i} values={x} /> })\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n            // </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default KeyBox\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport ResultBar from './ResultBar';\nimport KeyBox from './KeyBox';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputString: \"0\",\n      eqnString: \"0\",\n      eqnValue: 0\n    }\n  }\n\n\n\n\n\n  evaluate = (eqnstr, inpstr, opr) => {\n    let n1 = eqnstr.length;\n    let eqn = eqnstr;\n    let inp = \"0\";\n    let d1=Number(inpstr);\n\n    if (opr === \"+\" || opr === \"-\" || opr === \"*\" || opr === \"/\" || opr === \"=\") {\n        \n        if(isNaN(Number(eqnstr[n1 - 1]))){\n          let d2=Number(eqnstr.slice(0,-2))\n          if(inpstr === \"0\" && opr !==\"=\")\n            eqn=`${d2}`;\n          else if (eqnstr[n1 - 1] === \"+\")\n            eqn=`${d2+d1}`;\n          else if(eqnstr[n1 - 1] === \"-\")\n            eqn=`${d2-d1}`;\n          else if(eqnstr[n1 - 1] === \"*\")\n            eqn=`${d2*d1}`;\n          else if(eqnstr[n1 - 1] === \"/\")\n            eqn=`${d2/d1}`;\n        }\n        else\n          eqn=inpstr;\n        if(opr === \"=\")\n          inp=eqn;\n        else\n          eqn+=\" \"+opr;\n    }\n    else{\n      if(opr === \"1/x\"){\n        console.log(\"@\");\n        inp=`${1/d1}`;\n      }\n      else if(opr === \"sqrt(x)\"){\n        inp=`${d1**(1/2)}`;\n      }\n      else if(opr === \"x^2\"){\n        inp=`${d1**2}`;\n      }\n    }\n\n    return {\n      inputString : inp,\n      eqnString: eqn\n    };\n  }\n\n\n\n\n  handlekey = (event) => {\n    let btn = event.target.textContent;\n    console.log(btn);\n    let val = Number(btn);\n\n    if (isNaN(val) === false) {\n      this.setState((prevstate) => {\n        return {\n          inputString: (prevstate.inputString === \"0\") ? (btn) : (prevstate.inputString + btn)\n        }\n      })\n    }\n    else if (btn === \".\") {\n      this.setState((prevstate) => {\n        return {\n          inputString: prevstate.inputString.includes('.') ? prevstate.inputString : prevstate.inputString + \".\",\n        }\n      })\n    }\n    else if (btn === \"C\") {\n      this.setState({\n        inputString: \"0\",\n        eqnString: \"0\",\n        eqnValue: 0,\n      })\n    }\n    else if (btn === \"del\") {\n      this.setState((prevstate) => {\n        return {\n          inputString: prevstate.inputString.length === 1 || (prevstate.inputString.length === 2 && prevstate.inputString[0] === \"-\") ? \"0\" : prevstate.inputString.slice(0, -1),\n        }\n      })\n    }\n    else if (btn === \"CE\") {\n      this.setState({\n        inputString: \"0\",\n      })\n    }\n    else if(btn === \"+/-\"){\n      this.setState((prevstate)=>{\n        let d=Number(prevstate.inputString);\n        return{\n          inputString: `${-d}`\n        }\n      })\n    }\n    else{\n      this.setState((prevstate)=>{\n        return this.evaluate(prevstate.eqnString,prevstate.inputString,btn);\n        })\n    }\n  }\n\n  render() {\n    let { inputString, eqnString } = this.state;\n\n    return (\n      <>\n        <div id=\"mainbox\">\n          <h1 id=\"heading\">STANDARD CALCULATOR</h1>\n          <ResultBar value={inputString} eqn={eqnString} />\n          <div id=\"keybox\" onClick={this.handlekey}>\n            <KeyBox />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}